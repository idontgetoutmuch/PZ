/**
 * @file
 *
 * @author Generated by spec2x
 * $Rev$
 * $Date$
 */
#ifndef BIM_EPGNODE_HPP
#define BIM_EPGNODE_HPP

#include "bi/model/BayesNode.hpp"
#include "bi/state/Coord.hpp"
#include "bi/cuda/cuda.hpp"
#include "bi/math/scalar.hpp"
#include "bi/misc/compile.hpp"

#ifdef USE_SSE
#include "bi/math/sse.hpp" // overloads of standard math functions
#endif

/**
 * \f\$EPg\f\$; 
 */
class EPgNode : public bi::BayesNode {
public:
  /**
   * Constructor.
   */
  EPgNode();

  /**
   * Prior mean.
   */
  static real mu0();

  /**
   * Prior standard deviation.
   */
  static real sigma0();
    

};

#include "bi/model/model.hpp"
#include "bi/traits/type_traits.hpp"
#include "bi/traits/dimension_traits.hpp"
#include "bi/traits/boundary_traits.hpp"
#include "bi/traits/prior_traits.hpp"





HAS_LOG_NORMAL_PRIOR(EPgNode);
IS_P_NODE(EPgNode);










inline real EPgNode::mu0() {
  real result;
  
if (true) {
    result = CUDA_LOG(REAL(0.25));
  }



  return result;
}

inline real EPgNode::sigma0() {
  real result;
  
if (true) {
    result = REAL(0.5);
  }



  return result;
}






#endif
